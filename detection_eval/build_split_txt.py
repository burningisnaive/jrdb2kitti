import numpy as np
import os
import tqdm
import argparse

parser = argparse.ArgumentParser('description=Show the usage')
parser.add_argument('-f',
                    '--filelist',
                    default='/data2/blli/JRDB/KITTI/object/training/filelist.txt',
                    help='filelist generated by convert_dataset_to_KITTI.py')
parser.add_argument('-o',
                    '--output_dir',
                    default='/data2/blli/JRDB/KITTI/',
                    help='location to store the folder ImageSets/')            
parser.add_argument('-n',
                    '--test_num',
                    default=27661,
                    help='size of testing set')                              

args = parser.parse_args()

test_set_size = args.test_num
ImageSets_path = args.output_dir

# write to test.txt
list_test = []
for i in tqdm.tqdm(range(test_set_size)):
    list_test.append('{:06d}'.format(i) + '\n')
list_test[-1] = list_test[-1].replace('\n', '')

with open(os.path.join(ImageSets_path, 'ImageSets', 'test.txt'), 'w') as f_test:
    f_test.writelines(list_test)

val_scenes = [  "clark-center-2019-02-28_1", 
                "gates-ai-lab-2019-02-08_0",
                "huang-2-2019-01-25_0",
                "meyer-green-2019-03-16_0",
                "nvidia-aud-2019-04-18_0",
                "tressider-2019-03-16_1",
                "tressider-2019-04-26_2"]

list_train = []
list_val = []
list_trainval = []
with open(args.filelist) as f:
    all_frame = f.readlines()
    for i, frame in enumerate(all_frame):
        num_06d_str = '{:06d}'.format(i)
        scene_name = frame.strip().split(' ')[0]
        list_trainval.append(num_06d_str + '\n')

        if scene_name in val_scenes:
            list_val.append(num_06d_str + '\n')
        else:
            list_train.append(num_06d_str + '\n')

list_trainval[-1] = list_val[-1].replace('\n', '')
list_train[-1] = list_train[-1].replace('\n', '')
list_val[-1] = list_val[-1].replace('\n', '')

with open(os.path.join(ImageSets_path, 'ImageSets', 'train.txt'), 'w') as f:
    f.writelines(list_train)

with open(os.path.join(ImageSets_path, 'ImageSets', 'val.txt'), 'w') as f:
    f.writelines(list_val)

with open(os.path.join(ImageSets_path, 'ImageSets',  'trainval.txt'), 'w') as f:
    f.writelines(list_trainval)
